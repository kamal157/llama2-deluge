{"messages": [{"role": "user", "content": "Returns 'true' if the main text includes the specified text. Otherwise it will return 'false'"}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\norg_name=\"Zoho\";\ninfo product_name.contains(org_name);"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the given text starts with specified text. Otherwise it will return 'false'."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\nresult = product_name.startsWith(\"Zoho\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the specified text is at the end of the main text. Otherwise it will return 'false'."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\norg_name=\"Creator\";\ninfo product_name.endsWith(org_name);"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the main text is equal to the specified text. Otherwise it will return 'false'."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\norg_name=\"zoho creator\";\ninfo product_name.equalsIgnoreCase(org_name);"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if given text matches with the regular expression. Otherwise it will return 'false'."}, {"role": "assistant", "content": "username=\"ZC000001APP\";\nresult = username.matches(\"[A-Z]{2}[0-9]{6}[A-Z]{3}\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns only alphabets from the given text and ignores the rest. Returns the empty text if alphabets are not found in given text."}, {"role": "assistant", "content": "form_name=\"Form-1,Form-2,Form-3\";\ninfo form_name.getAlpha();"}]}
{"messages": [{"role": "user", "content": "Returns alphabets and numbers from the given text and ignores the rest. Returns empty text if alphabets and numbers are not found in given text."}, {"role": "assistant", "content": "form_name=\"Form-1,Form-2,Form-3\";\ninfo form_name.getAlphaNumeric();"}]}
{"messages": [{"role": "user", "content": "Returns a value which represents number of times the substring (word/alphabet) has occurred. Returns '0' if the substring is not present."}, {"role": "assistant", "content": "statement = \"Zoho Creator is a Zoho Product\";\nresult = statement.getOccurenceCount(\"Zoho\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the text which is present before the mentioned text. If no prefix is found, the function will return an empty text. If the subtext is not found in the source text, the function will return null."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\nresult = product_name.getPrefix(\"Creator\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the text which is present after the mentioned text. If no suffix is found, the function will return an empty text. If the subtext is not found in the source text, the function will return null."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\nresult = product_name.getSuffix(\"Zoho\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the position of the given substring in main text. Otherwise it will return '-1' if text is not found."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\nresult = product_name.indexOf(\"Creator\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the position of last occurence of mentioned substring in main text. Returns '-1' if subtext is not found."}, {"role": "assistant", "content": "product_name=\"Zoho Creator Creator\";\nresult = product_name.lastIndexOf(\"Creator\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Removes the specified text and returns the edited text. The original text remains unaffected. Returns unchanged text if the specified text is not found."}, {"role": "assistant", "content": "product_name=\"Zoho Creator Zoho Creator\";\nresult = product_name.remove(\"Creator\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Removes all alphabets from the given text and returns the edited text. If the source text doesn't have numbers or special characters, the function returns an empty text. If the source text doesn't have letters, the function returns the unchanged text."}, {"role": "assistant", "content": "product_name = \"I have 12-Zoho Creator Applications\";\nresult = product_name.removeAllAlpha();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Removes all alphabets and numbers from the given text and returns the edited text. If the source text doesn't have special characters, the function returns an empty text. If the source text doesn't have letters or numbers, the function returns the unchanged text."}, {"role": "assistant", "content": "product_name = \"I have 12-Zoho Creator Applications\";\nresult = product_name.removeAllAlphaNumeric();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Removes first occurence of the specified text and returns the edited text. Returns unchanged text if the specified text is not found."}, {"role": "assistant", "content": "product_name=\"Zoho Creator Zoho Creator\";\nresult = product_name.removeFirstOccurence(\"Creator\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Removes last occurence of the specified text and returns the edited text. Returns unchanged text if the specified text is not found."}, {"role": "assistant", "content": "product_name=\"Zoho Creator Zoho Creator\";\nresult = product_name.removeLastOccurence(\"Creator\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Replaces all the occurrence of given text () with specified text () and returns the updated source text (). Returns unchanged source text if specified text is not found. If the third param is set as true, the regex pattern provided in the search text are ignored while searching. By default, the third param is set as false."}, {"role": "assistant", "content": "7\n/*Example 1*/\nproduct_name=\"Zoho Creator Zoho Creator\";\nresult = product_name.replaceAll(\"Creator\",\"CRM\");\ninfo result;\n// returns Zoho CRM Zoho CRM\n\u200b\n/*Example 2*/\nemail_id = \"shawn24@zylker.com\";\nresult1 = email_id.replaceAll(\"(.*)@([a-z]*).com\",\"<email>\");\n0\ninfo result1;\n1\n// returns <email>\n2\n\u200b\n3\n/*Example 3*/\n4\nemail_id = \"shawn24@zylker.com\";\n5\nresult2 = email_id.replaceAll(\"(.*)@([a-z]*).com\",\"<email>\", true);\n6\ninfo result2;\n7\n// returns shawn24@zylker.com</email></email></email>"}]}
{"messages": [{"role": "user", "content": "Replaces the first occurrence of given text () with specified text () and returns the updated source text (). Returns unchanged source text if specified text is not found. If the third param is set as true, the regex pattern provided in the search text are ignored while searching. By default, the third param is set as false."}, {"role": "assistant", "content": "7\n/*Example 1*/\nproduct_name=\"Zoho Creator Zoho Creator\";\nresult = product_name.replaceFirst(\"Creator\",\"CRM\");\ninfo result;\n// returns Zoho CRM Zoho Creator\n\u200b\n/*Example 2*/\nemail_id = \"shawn24@zylker.com\";\nresult1 = email_id.replaceFirst(\"(.*)@([a-z]*).com\",\"<email>\");\n0\ninfo result1;\n1\n// returns <email>\n2\n\u200b\n3\n/*Example 3*/\n4\nemail_id = \"shawn24@zylker.com\";\n5\nresult2 = email_id.replaceFirst(\"(.*)@([a-z]*).com\",\"<email>\", true);\n6\ninfo result2;\n7\n// returns shawn24@zylker.com</email></email></email>"}]}
{"messages": [{"role": "user", "content": "Replaces all uppercase alphabets to lowercase and return the updated text. If no uppercase alphabets are present then unchanged text is returned."}, {"role": "assistant", "content": "product_name=\"ZOHO CREATOR\";\nresult = product_name.toLowerCase();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Replaces all lowercase alphabets to uppercase and return the updated text. If no lowercase alphabets are present then unchanged text is returned."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\nresult = product_name.toUpperCase();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Replaces all lowercase alphabets to uppercase and return the updated text. If no lowercase alphabets are present then unchanged text is returned."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\nresult = product_name.upper();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Replaces all uppercase alphabets to lowercase and returns the updated text. If no uppercase alphabets are present then unchanged text is returned."}, {"role": "assistant", "content": "product_name=\"ZOHO CREATOR\";\nresult = product_name.lower();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns a new text with all the unnecessary leading and trailing whitespaces from the source text removed. If no such whitespaces are present, an unchanged copy of the source text is returned."}, {"role": "assistant", "content": "product_name=\" Zoho Creator \";\nresult = product_name.trim();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns part of text with mentioned range from startIndex (inclusive) to endIndex (exclusive). Returns nothing if startIndex is equal to endIndex'."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\nresult = product_name.subString(0,4);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Takes a hexadecimal value as input and returns its equivalent text."}, {"role": "assistant", "content": "response = hexToText(\"5a796c6b657220436f7270\");\ninfo response; // Returns Zylker Corp\n\u200b"}]}
{"messages": [{"role": "user", "content": "Takes a text as input and returns its equivalent hexadecimal value."}, {"role": "assistant", "content": "response = textToHex(\"Zylker Corp\");\ninfo response; // Returns 5a796c6b657220436f7270\n\u200b"}]}
{"messages": [{"role": "user", "content": "Returns part of text with mentioned range from startIndex (inclusive) to endIndex (exclusive). Returns nothing if startIndex is equal to endIndex'."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\nresult = product_name.subText(0,4);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the piece of text specified by the number of characters starting from the left"}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\ninfo product_name.left(4);"}]}
{"messages": [{"role": "user", "content": "If the given text is in the form of list then it splits the text by the given subtext and converts them into list . If given subtext is not present, then it will return the unchanged text in the list. If it is in the form of map, then the text is converted into map"}, {"role": "assistant", "content": "product_name=\"Zoho Creator Application\";\nresult = product_name.toCollection(\" \");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the piece of text specified by the number of characters starting from the right."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\ninfo product_name.right(7);"}]}
{"messages": [{"role": "user", "content": "Returns the text after converting first alphabet of each word of the sentence in uppercase."}, {"role": "assistant", "content": "product_name=\"welcome to zoho creator!\";\ninfo product_name.proper();"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the mentioned text is found in main text irrespective of uppercase/lowercase. Otherwise it will return false."}, {"role": "assistant", "content": "app_name=\"ZOHO CREATOR APPLICATION\";\ninfo app_name.containsIgnoreCase(\"Application\");"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the mentioned text is not found in main text . Otherwise it will return false."}, {"role": "assistant", "content": "app_name=\"ZOHO CREATOR APPLICATION\";\ninfo app_name.notContains(\"APPLICATION\");"}]}
{"messages": [{"role": "user", "content": "Returns the starting index of first occurence of the mentioned text in main text."}, {"role": "assistant", "content": "product_name=\"Zoho Creator Application\";\ninfo product_name.find(\"Creator\");"}]}
{"messages": [{"role": "user", "content": "Returns the given text after adding whitespace characters to its left so that the total size of string matches the specified number."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\ninfo product_name.leftPad(15);"}]}
{"messages": [{"role": "user", "content": "Returns the part of given text from mentioned index range."}, {"role": "assistant", "content": "app_name=\"Zoho Creator Application\";\ninfo app_name.mid(5,12);"}]}
{"messages": [{"role": "user", "content": "Returns the given text after adding whitespace characters to its right so that the total size of string matches the specified number."}, {"role": "assistant", "content": "product_name=\"Zoho Creator\";\ninfo product_name.rightPad(15);"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the given text starts with specified text. Otherwise it will return 'false'. The search is irrespective of uppercase/lowercase."}, {"role": "assistant", "content": "product_name=\"Creator Application\";\nresult = product_name.startsWithignorecase(\"Creator\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the given text ends with specified text. Otherwise it will return 'false'. The search is irrespective of uppercase/lowercase."}, {"role": "assistant", "content": "product_name=\"Creator Application\";\nresult = product_name.endsWithIgnoreCase(\"Application\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Append/Concat a string to another string."}, {"role": "assistant", "content": "org_name=\"Zoho \";\nservice=\"Creator\";\nresult = org_name.concat(service);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Checks equality of passed values. It can be any types."}, {"role": "assistant", "content": "info '01/01/2017'.equals('01-Jan-2017');"}]}
{"messages": [{"role": "user", "content": "Returns the absolute value of given number by making it positive."}, {"role": "assistant", "content": "umber=-3.45;\ninfo number.abs();"}]}
{"messages": [{"role": "user", "content": "Returns the trigonometric cosine of the angle (in radians) specified by <number/decimal>."}, {"role": "assistant", "content": "angle = 1.0471975511965979;\ninfo angle.cos();"}]}
{"messages": [{"role": "user", "content": "Returns the trigonometric sine of the angle (in radians) specified by <number/decimal>."}, {"role": "assistant", "content": "angle = 1.57079632679;\ninfo angle.sin();"}]}
{"messages": [{"role": "user", "content": "Returns the trigonometric tangent of the angle (in radians) specified by <number/decimal>."}, {"role": "assistant", "content": "angle= 0.7853981633974483;\ninfo angle.tan();"}]}
{"messages": [{"role": "user", "content": "Returns the angle (in radians) of the trigonometric cosine specified by <number/decimal>."}, {"role": "assistant", "content": "value = 0.5;\ninfo value.acos();"}]}
{"messages": [{"role": "user", "content": "Returns the angle (in radians) of the trigonometric sine specified by <number/decimal>."}, {"role": "assistant", "content": "value = 1;\ninfo value.asin();"}]}
{"messages": [{"role": "user", "content": "Returns the angle (in radians) of the trigonometric tangent specified by <number/decimal>."}, {"role": "assistant", "content": "value = 1;\ninfo value.atan();"}]}
{"messages": [{"role": "user", "content": "Returns the logarithmic value of the given number (log of given number)."}, {"role": "assistant", "content": "umber=1;\ninfo number.log();"}]}
{"messages": [{"role": "user", "content": "Returns the maximum of the two numbers."}, {"role": "assistant", "content": "result = 10.max(20);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the minimum of the two numbers."}, {"role": "assistant", "content": "result = 10.min(20);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the exponential value of the given number (e raised to power of number)."}, {"role": "assistant", "content": "umber=0;\ninfo number.exp();"}]}
{"messages": [{"role": "user", "content": "Returns the result of first number raised to power of second number."}, {"role": "assistant", "content": "result = 10.power(3);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns a number after rounding it off to given number of digits."}, {"role": "assistant", "content": "umber = 3.123456;\ninfo number.round(4);"}]}
{"messages": [{"role": "user", "content": "Returns the square root of given positive number."}, {"role": "assistant", "content": "umber = 25;\ninfo number.sqrt();"}]}
{"messages": [{"role": "user", "content": "Converts the given number into hexadecimal format and returns the value."}, {"role": "assistant", "content": "umber=100;\ninfo number.toHex();"}]}
{"messages": [{"role": "user", "content": "Converts the supplied input <number> to words in the specified <language> ."}, {"role": "assistant", "content": "umber = -24;\ninfo number.toWords(\"en-us\");"}]}
{"messages": [{"role": "user", "content": "Returns the number by rounding it down to the next nearest smaller integer."}, {"role": "assistant", "content": "fieldValue=9.5;\ninfo fieldValue.floor();"}]}
{"messages": [{"role": "user", "content": "Returns the number by rounding it up to the next nearest greater integer."}, {"role": "assistant", "content": "fieldValue=9.5;\ninfo fieldValue.ceil();"}]}
{"messages": [{"role": "user", "content": "Test whether given number is even or not. Throws error other than numbers."}, {"role": "assistant", "content": "umber = 200017;\niseven = isEven(number);\ninfo iseven;"}]}
{"messages": [{"role": "user", "content": "Test whether given number is odd or not. Throws error other than numbers."}, {"role": "assistant", "content": "umber = 200017;\nodd = isOdd(number);\ninfo odd;"}]}
{"messages": [{"role": "user", "content": "Returns base 10 logarithmic value of the given number (log10 of given number)."}, {"role": "assistant", "content": "umber=81;\ninfo number.log10();"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after adding the specified number of days to the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.addDay(10);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after adding the specified number of months to the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.addMonth(15);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after adding the specified number of Years to the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.addYear(15);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after adding the specified number of Weeks to the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.addWeek(15);"}]}
{"messages": [{"role": "user", "content": "Returns the date from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.getDay();"}]}
{"messages": [{"role": "user", "content": "Returns the numeric value of number for day of the week for given date-time value ranging from 1 to 7."}, {"role": "assistant", "content": "currentDate='25-May-1990 20:50:36';\ninfo currentDate.getDayOfWeek();"}]}
{"messages": [{"role": "user", "content": "Returns the numeric value of month from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.getMonth();"}]}
{"messages": [{"role": "user", "content": "Returns the numeric value of number for week for given date-time value ranging from 1 to 52."}, {"role": "assistant", "content": "currentDate='25-May-1990 20:50:36';\ninfo currentDate.getWeekOfYear();"}]}
{"messages": [{"role": "user", "content": "Returns the value of year from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.getYear();"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after subtracting the specified number of days from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.subDay(15);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after subtracting the specified number of months from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.subMonth(15);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after subtracting the specified number of years from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.subYear(15);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after subtracting the specified number of weeks from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.subWeek(15);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after adding the specified number of hours to the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.addHour(5);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after adding the specified number of minutes to the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.addMinutes(15);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after adding the specified number of seconds to the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.addSeconds(15);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after subtracting the specified number of hours from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.subHour(5);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after subtracting the specified number of minutes from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.subMinutes(5);"}]}
{"messages": [{"role": "user", "content": "Returns a date-time value after subtracting the specified number of seconds from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.subSeconds(15);"}]}
{"messages": [{"role": "user", "content": "Returns a date value after adding the specified number of working days to the given date."}, {"role": "assistant", "content": "currentDate='1-Jan-1990';\ninfo currentDate.addBusinessDay(10);"}]}
{"messages": [{"role": "user", "content": "Returns the sequence number of the day of given year from the given date value."}, {"role": "assistant", "content": "currentDate='1-Feb-1990';\ninfo currentDate.getDayOfYear();"}]}
{"messages": [{"role": "user", "content": "Returns the value of hour from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.getHour();"}]}
{"messages": [{"role": "user", "content": "Returns the value of minutes from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.getMinutes();"}]}
{"messages": [{"role": "user", "content": "Returns the value of seconds from the given date-time value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990 20:50:36';\ninfo currentDate.getSeconds();"}]}
{"messages": [{"role": "user", "content": "Returns the difference of hours between the given start and end date-time values. If the start date-time is larger than the end date-time, the function returns a negative value."}, {"role": "assistant", "content": "date1 = '1-Jan-2019 00:00:00';\ndate2 = '1-Jan-2019 12:12:12';\ninfo date1.hoursbetween(date2);"}]}
{"messages": [{"role": "user", "content": "Returns a number which represents the number of months between two given dates."}, {"role": "assistant", "content": "date1='1-Jan-1990';\ndate2='31-May-1990';\ninfo date1.monthsBetween(date2);"}]}
{"messages": [{"role": "user", "content": "Returns a number which represents the number of years between two given dates."}, {"role": "assistant", "content": "date1 = '1-Jan-1990';\ndate2 = '1-Jan-2000';\ninfo date1.yearsBetween(date2);"}]}
{"messages": [{"role": "user", "content": "Returns the last date of the month after adding/subtracting the specified number of months from the given date value. Addition/Subtraction of months depends on value given in the function."}, {"role": "assistant", "content": "currentDate='1-Jan-1990';\ninfo currentDate.eomonth(5);"}]}
{"messages": [{"role": "user", "content": "Returns a date value after adding the specified number of working days to the given date value."}, {"role": "assistant", "content": "currentDate='1-Jan-1990';\nweekends={\"SATURDAY\",\"SUNDAY\"};\ninfo currentDate.workday(10,weekends);"}]}
{"messages": [{"role": "user", "content": "Returns the numeric value of number for the day of the week for given date-time value ranging from 1 to 7."}, {"role": "assistant", "content": "currentDate='25-May-1990 20:50:36';\ninfo currentDate.weekday();"}]}
{"messages": [{"role": "user", "content": "Returns the starting date of the month mentioned in the given date."}, {"role": "assistant", "content": "fieldValue='31-Jan-1990';\ninfo fieldValue.toStartOfMonth();"}]}
{"messages": [{"role": "user", "content": "Returns the starting date of the week for a given date. First day is 'Sunday'."}, {"role": "assistant", "content": "fieldValue='31-Jan-1990';\ninfo fieldValue.toStartOfWeek();"}]}
{"messages": [{"role": "user", "content": "This function finds the number of days between two specified dates and divides it by 365."}, {"role": "assistant", "content": "date1='01/01/2015';\ndate2 = '03/01/2015';\nyf = date1.yearfraction(date2);\ninfo yf;"}]}
{"messages": [{"role": "user", "content": "Returns a number which represents the number of workdays between two given dates."}, {"role": "assistant", "content": "date1='1-Jan-1990';\ndate2='25-Jan-1990';\ninfo date1.workdaysBetween(date2);"}]}
{"messages": [{"role": "user", "content": "Returns a number which represents the number of days between two given dates."}, {"role": "assistant", "content": "date1='1-Jan-1990';\ndate2= '25-Jan-1990';\ninfo date1.daysbetween(date2);"}]}
{"messages": [{"role": "user", "content": "Returns a list of days between two given dates."}, {"role": "assistant", "content": "date1='4-Jan-2018';\ndate2='09-Jan-2018';\ninfo date1.workdayslist(date2);"}]}
{"messages": [{"role": "user", "content": "Returns the time extracted from a date object in user readable format. If the second parameter is true, the seconds is displayed (if present in the source date). If it is false, the seconds is hidden. If it is not specified, takes false by default."}, {"role": "assistant", "content": "time = '17-Jan-2018 18:10:37'.getTime(12);\ninfo time;\n//returns 6:10 PM"}]}
{"messages": [{"role": "user", "content": "Returns the date in a readable format from a date object."}, {"role": "assistant", "content": "currentDate = '17-Jan-2018 18:10:37';\ninfo currentDate.getDate();"}]}
{"messages": [{"role": "user", "content": "Returns the date and time in a readable format from a date object. The param represents the hours format and can either be 12 or 24. The param decides if the seconds value needs to be displayed. If this param is supplied with true, the seconds value is displayed. By default, this param is set as false."}, {"role": "assistant", "content": "currentDate = '17-Jan-2018 18:10:37';\ninfo currentDate.getDateTime();\n//returns 17th January 2018,06:10 PM\n\u200b\ncurrentDate='17-Jan-2018 10:10:37';\ninfo currentDate.getDateTime(12, true);\n// returns 17th January 2018,10:10:37 AM\n\u200b"}]}
{"messages": [{"role": "user", "content": "Returns a date after adding number of working hours given."}, {"role": "assistant", "content": "date1='8-Jan-2018 9:00';\ninfo date1.addbusinesshour(20);\n///returns '10-Jan-2018 13:00'"}]}
{"messages": [{"role": "user", "content": "Inserts new element in the Collection variable and returns the updated variable. Element passed in function should be of same type as existing elements in the variable."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nproduct_Detail.insert(\"Plan\":\"Enterprise\");\ninfo product_Detail;\nproducts= Collection(\"Mail\",\"Creator\");\nproducts.insert(\"CRM\");\ninfo products;"}]}
{"messages": [{"role": "user", "content": "Inserts set of new elements in the Collection variable and returns the updated variable. Elements passed in function should be of same type as existing elements in the variable."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nproduct_Detail.insertAll({\"Plan\":\"Enterprise\",\"ExpiresOn\":\"2018\"});\ninfo product_Detail;"}]}
{"messages": [{"role": "user", "content": "Updates an element in the Collection variable and returns the updated variable. Element passed in function should be of same type as existing elements in the variable."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\",\"Plan\":\"Enterprise\");\nproduct_Detail.update(\"Plan\",\"Free\");\ninfo product_Detail;"}]}
{"messages": [{"role": "user", "content": "Removes specific 'value' along with its 'key' from the Collection variable and returns the updated Collection variable."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nproduct_Detail.delete(\"Creator\");\ninfo product_Detail;"}]}
{"messages": [{"role": "user", "content": "Removes multiple 'values' along with their 'keys' from the Collection variable and returns the updated Collection variable."}, {"role": "assistant", "content": "product_Detail = Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nitems = Collection(\"Creator\",\"Zoho\");\nproduct_Detail.deleteAll(items);\ninfo product_Detail;"}]}
{"messages": [{"role": "user", "content": "Removes specific 'key' along with its 'value' from the Collection variable and returns the updated Collection variable."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nproduct_Detail.deleteKey(\"Product\");\ninfo product_Detail;"}]}
{"messages": [{"role": "user", "content": "Removes multiple 'keys' along with their 'values' from the Collection variable and returns the updated Collection variable."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nitems = Collection(\"company\",\"Product\");\nproduct_Detail.deleteKeys(items);\ninfo product_Detail;"}]}
{"messages": [{"role": "user", "content": "Rearranges the 'values' of the Collection variable alphabetically either in ascending/descending order (Depends on parameter passed)."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nproduct_Detail.sort(true);\ninfo product_Detail;"}]}
{"messages": [{"role": "user", "content": "Rearranges the 'keys' of the collection variable alphabetically either in ascending or descending order based on the parameter passed. The sortKey() function arranges the keys in case-sensitive order. In other words, when keys are arranged in ascending order, the uppercase characters are sorted before the lowercase characters, i.e., the sorting is done based on ASCII values."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"product\":\"Creator\");\nproduct_Detail.sortKey(true);\ninfo product_Detail;"}]}
{"messages": [{"role": "user", "content": "Removes all the elements from the Collection variable and returns an empty Collection variable."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nproduct_Detail.clear();\ninfo product_Detail;"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the mentioned key is present in the Collection variable. Otherwise it will return false."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nresult = product_Detail.containsKey(\"company\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the mentioned value is present in the Collection variable. Otherwise it will return false."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nresult = product_Detail.containsValue(\"Zoho\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the 'key' associated with the 'value' passed in the function. Returns null if the value passed is not present."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nresult = product_Detail.getKey(\"Zoho\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the 'key' associated with the 'value' occurred at last in the Collection variable. Returns null if the value passed is not present."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\",\"Brand\":\"Zoho\");\nresult = product_Detail.getLastKey(\"Zoho\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns 'false' if Collection variable is not empty. Otherwise it will return false."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nresult = product_Detail.isEmpty();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns number of 'key-values' or 'values' present in the variable. Returns '0' if variable is empty."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nresult = product_Detail.size();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the list containing all keys of the given Collection variable. Returns empty list if Collection variable contains nothing."}, {"role": "assistant", "content": "product_Detail= Collection(\"Company\":\"Zoho\",\"Product\":\"Creator\");\nresult = product_Detail.keys();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the list containing all values of the given Collection variable. Returns empty list if Collection variable contains nothing."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\");\nresult = product_Detail.values();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the list containing all \"distinct values\" of the given Collection variable. Returns empty list if Collection variable contains nothing."}, {"role": "assistant", "content": "product_Detail= Collection(\"company\":\"Zoho\",\"Product\":\"Creator\",\"Brand\":\"Zoho\");\nresult = product_Detail.distinct();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the list containing all \"common values\" present in two given Collection variables. Does not work for key-value type variable."}, {"role": "assistant", "content": "product_Detail_1= Collection(\"ZohoCreator\",\"ZohoCRM\",\"ZohoBooks\");\nproduct_Detail_2= Collection(\"ZohoCreator\",\"ZohoCRM\",\"ZohoDesk\");\nresult= product_Detail_1.intersect(product_Detail_2);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns set of elements of a given collection based on start and end index."}, {"role": "assistant", "content": "product_List = Collection(\"Cream\",\"Milk\",\"Butter\",\"Cheese\");\nresult = product_List.duplicate(1,2);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the mentioned element is present in the list. Otherwise it returns 'false'."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\"};\ninfo product_List.contains(\"Cream\");"}]}
{"messages": [{"role": "user", "content": "Returns the value situated at given index of the list. Returns null for invalid index value."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\"};\nresult = product_List.get(1);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the index of the value mentioned in the function."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\"};\nresult = product_List.indexOf(\"Butter\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the index of the value occurred at last in the list."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\",\"Milk\",\"Butter\"};\nresult = product_List.lastIndexOf(\"Butter\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Removes the value situated at the specified index of the List and updates the indices of the succeeding values."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\"};\nresult = product_List.remove(1);\ninfo product_List;"}]}
{"messages": [{"role": "user", "content": "Removes the specific element from the list if it is present in the given list."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\"};\nproduct_List.removeElement(\"Butter\");\ninfo product_List;"}]}
{"messages": [{"role": "user", "content": "Removes elements of list2 from list1 and returns the updated list."}, {"role": "assistant", "content": "product_List1={\"Milk\",\"Butter\",\"Cheese\",\"Cream\"};\nproduct_List2={\"Milk\",\"Cream\"};\nproduct_List1.removeAll(product_List2);\ninfo product_List1;"}]}
{"messages": [{"role": "user", "content": "Rearranges the elements of the list alphabetically either in ascending/descending order (Depends on parameter passed)."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\"};\ninfo product_List.sort(true);"}]}
{"messages": [{"role": "user", "content": "Returns the size of the given List."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\",\"Cheese\"};\nresult = product_List.size();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if list is empty. Otherwise it will return 'false'."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\",\"Cheese\"};\nresult = product_List.isEmpty();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns set of elements of a given list based on start and end index."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\",\"Cheese\"};\nresult = product_List.subList(1,2);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Removes all duplicate elements from the given list and returns a list with distinct elements."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\",\"Cheese\",\"Milk\",\"Butter\"};\nresult = product_List.distinct();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns a list which contains the common elements of both the lists."}, {"role": "assistant", "content": "product_List1={\"Milk\",\"Butter\",\"Cheese\"};\nproduct_List2={\"Milk\",\"Butter\",\"Cream\"};\nresult = product_List1.intersect(product_List2);\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Adds the element to the list and returns the updated list."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\"};\nproduct_List.add(\"Cheese\");\ninfo product_List;"}]}
{"messages": [{"role": "user", "content": "Returns a list which contains the elements of both the lists."}, {"role": "assistant", "content": "product_List1={\"Milk\",\"Butter\"};\nproduct_List2={\"Cheese\",\"Cream\",\"Bread\"};\nproduct_List1.addAll(product_List2);\ninfo product_List1;"}]}
{"messages": [{"role": "user", "content": "Removes all the elements from the list and returns an empty list."}, {"role": "assistant", "content": "product_List={\"Milk\",\"Butter\",\"Cream\"};\nproduct_List.clear();\ninfo product_List;"}]}
{"messages": [{"role": "user", "content": "Returns the smallest value of a passed list"}, {"role": "assistant", "content": "price = {300,455,124,926,780};\nret = price.smallest();\ninfo ret;"}]}
{"messages": [{"role": "user", "content": "Returns the max value of a passed list"}, {"role": "assistant", "content": "price = {300,455,124,926,780};\nret = price.largest();\ninfo ret;"}]}
{"messages": [{"role": "user", "content": "Returns the average of a passed list"}, {"role": "assistant", "content": "price = {300,455,124,926,780};\nret = price.average();\ninfo ret;"}]}
{"messages": [{"role": "user", "content": "Returns the nth percentile value of a passed list"}, {"role": "assistant", "content": "marks = {300,455,124,926,780};\nret = marks.percentile(50) ;\ninfo ret;"}]}
{"messages": [{"role": "user", "content": "Returns the middlemost element of the specified collection of numbers. To get the median value, arrange the numbers in ascending/descending order. If the number of elements in the collection is even, the median is the average of the middle two elements. Otherwise, the middle element is the median of the collection."}, {"role": "assistant", "content": "marks ={300,455,124,926,780,890};\nret = marks.median();\ninfo ret;"}]}
{"messages": [{"role": "user", "content": "Returns the 'n'th smallest value of a passed list."}, {"role": "assistant", "content": "marks = {300,455,124,926,780};\nret = marks.nthsmallest(2);\ninfo ret;"}]}
{"messages": [{"role": "user", "content": "Returns the 'n'th largest value of a passed list."}, {"role": "assistant", "content": "marks = {300,455,124,926,780};\nret = marks.nthlargest(4);\ninfo ret;"}]}
{"messages": [{"role": "user", "content": "Returns the rank of passed values in a list."}, {"role": "assistant", "content": "marks = {300,455,124,926,780};\nret = marks.rank(926);\ninfo ret;\nret = marks.rank(926,\"ASC\");\ninfo ret;"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the mentioned key is present in the Map. Otherwise it returns 'false'."}, {"role": "assistant", "content": "product_Map={\"company\":\"Zoho\",\"Product\":\"Creator\",\"ticket\":\"123456\"};\ninfo product_Map.containKey(\"Product\");"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if the mentioned value is present in the Map. Otherwise it returns 'false'."}, {"role": "assistant", "content": "product_Map={\"company\":\"Zoho\",\"Product\":\"Creator\",\"ticket\":\"123456\"};\ninfo product_Map.containValue(\"Creator\");"}]}
{"messages": [{"role": "user", "content": "Returns the value associated to the mentioned key in the Map."}, {"role": "assistant", "content": "product_Map={\"company\":\"Zoho\", \"product\":\"Creator\"};\nresult = product_Map.get(\"company\");\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if Map is empty. Otherwise it will return 'false'."}, {"role": "assistant", "content": "product_Map={\"company\":\"Zoho\",\"Product\":\"Creator\",\"ticket\":\"123456\"};\nresult = product_Map.isEmpty();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the list containing all keys of the given Map."}, {"role": "assistant", "content": "product_Map={\"company\":\"Zoho\",\"Product\":\"Creator\",\"ticket\":\"123456\"};\nresult = product_Map.keys();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Returns the size of the given Map."}, {"role": "assistant", "content": "product_Map={\"company\":\"Zoho\",\"Product\":\"Creator\",\"ticket\":\"123456\"};\nresult = product_Map.size();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Add new key-value pair in the given Map."}, {"role": "assistant", "content": "product_Map={\"company\":\"Zoho\",\"Product\":\"Creator\"};\nproduct_Map.put(\"ticket\",\"123456\");\ninfo product_Map;"}]}
{"messages": [{"role": "user", "content": "Puts all values of second Map into first Map."}, {"role": "assistant", "content": "product_Map1={\"company\":\"Zoho\",\"Product\":\"Creator\"};\nproduct_Map2={\"ticket\":\"123456\",\"year\":\"2015\"};\nproduct_Map1.putAll(product_Map2);\ninfo product_Map1;"}]}
{"messages": [{"role": "user", "content": "Removes the value associated to the given key in the Map."}, {"role": "assistant", "content": "product_Map={\"company\":\"Zoho\",\"Product\":\"Creator\",\"ticket\":\"123456\",\"year\":\"2015\"};\nproduct_Map.remove(\"Product\");\ninfo product_Map;"}]}
{"messages": [{"role": "user", "content": "Removes all the elements from the Map and returns an empty Map."}, {"role": "assistant", "content": "product_Map={\"company\":\"Zoho\",\"Product\":\"Creator\",\"ticket\":\"123456\",\"year\":\"2015\"};\nproduct_Map.clear();\ninfo product_Map;"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if a given value or expression is a date type. Otherwise it will return 'false'."}, {"role": "assistant", "content": "fieldValue=\"1-Feb-1990\";\ninfo fieldValue.isDate();"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if a given value or expression is null. Otherwise it will return 'false'."}, {"role": "assistant", "content": "fieldValue=\"ZohoCreator\";\ninfo fieldValue.isNull();"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if a given value or expression is a number type. Otherwise it will return 'false'."}, {"role": "assistant", "content": "fieldValue=100;\ninfo fieldValue.isNumber();"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if a given value or expression is String type. Otherwise it will return 'false'."}, {"role": "assistant", "content": "fieldValue=\"Welcome to Zoho Creator\";\ninfo fieldValue.isText();"}]}
{"messages": [{"role": "user", "content": "Returns 'true' if a given value or expression is empty. Otherwise it will return 'false'."}, {"role": "assistant", "content": "fieldValue=\"Zoho\";\ninfo fieldValue.isBlank();"}]}
{"messages": [{"role": "user", "content": "Converts the given expression into text format. Here expression can be of any data type."}, {"role": "assistant", "content": "product_quantity = 123456;\nresult = product_quantity.toText();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Converts the given expression into number format."}, {"role": "assistant", "content": "product_price = \"12345.6\";\nresult = product_price.toNumber();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Converts the number into the specificed format and returns it as text."}, {"role": "assistant", "content": "fieldValue=123456.789;\ninfo fieldValue.text(\"###,###\");"}]}
{"messages": [{"role": "user", "content": "Converts the given expression into Decimal format. Here expression can be of any data type."}, {"role": "assistant", "content": "product_quantity = \"123\";\nresult = product_quantity.toDecimal();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Converts the given date string expression into Date format."}, {"role": "assistant", "content": "dateString = \"1-Jan-2015\";\nresult = dateString.toDate();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Converts the given date-time string expression into Date-Time format."}, {"role": "assistant", "content": "dateString = \"1-Jan-2015 20:30:54 Sunday\";\nresult = dateString.toDateTime();\ninfo result;"}]}
{"messages": [{"role": "user", "content": "Extracts the data from the given XML/JSON text based on the path mentioned. Path is the node/key name of the give xml/json text."}, {"role": "assistant", "content": "employeeDetail=\"<response><employee><id>EMP-001</id><role>Developer</role></employee></response>\";\nemployeeID = employeeDetail.executeXPath(\"/response/employee/id/text()\");\ninfo employeeID;"}]}
{"messages": [{"role": "user", "content": "Returns the content stored in the input file - <file>"}, {"role": "assistant", "content": "pdf_file = \"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\ninfo pdf_file.getFileContent();\n// Note: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions."}]}
{"messages": [{"role": "user", "content": "Returns the name of the input file - <file>"}, {"role": "assistant", "content": "file1 = \"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\ninfo file1.getFileName(); // returns sample.pdf\n// Note: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions."}]}
{"messages": [{"role": "user", "content": "Returns the size of the input file - <file>"}, {"role": "assistant", "content": "pdf_file = \"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\ninfo pdf_file.getFileSize(); // returns 132 (bytes)\n// Note: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions."}]}
{"messages": [{"role": "user", "content": "Returns the content-type of the input file - <file>"}, {"role": "assistant", "content": "sample_file = \"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\ninfo sample_file.getFileType(); // returns pdf\n// Note: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions."}]}
{"messages": [{"role": "user", "content": "Returns \"true\" if <file> is a file. Otherwise, it returns \"false\""}, {"role": "assistant", "content": "fileVariable = \"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\ninfo fileVariable.isFile(); // returns true\n// Note: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions."}]}
{"messages": [{"role": "user", "content": "Sets the specified charset - <text> to the input file - <file>"}, {"role": "assistant", "content": "fileVariable=\"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\nfileVariable.setCharSet(\"UTF-16\");\ninfo fileVariable;\n// Note 1: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions.\n//Note 2: The setCharSet built-in function does not return any value and hence its output cannot be displayed using info statement. The file stored in fileVariable will be encoded with \"UTF-16\" charset while sending in a HTTP request using invoke URL task."}]}
{"messages": [{"role": "user", "content": "Sets the specified name - <text> to the input file - <file>"}, {"role": "assistant", "content": "fileVariable = \"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\nfileVariable.setFileName(\"sampleFile.pdf\");\ninfo fileVariable.getFileName() ;\n// Note: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions."}]}
{"messages": [{"role": "user", "content": "Sets the specified file type - <text> to the input file - <file>"}, {"role": "assistant", "content": "fileVariable = \"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample\");\nfileVariable.setFileType(\"pdf\");\ninfo fileVariable.getFileType() ;\n// Note: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions."}]}
{"messages": [{"role": "user", "content": "Extracts the files from the input compressed file - <file>"}, {"role": "assistant", "content": "zip_file= \"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\").compress(\"compressed_file\");\nfile_collection = zip_file.extract();\ninfo file_collection ;\n// Note: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions."}]}
{"messages": [{"role": "user", "content": "Compresses the input file or list of files stored in <file> into a ZIP file. The specified file name - <text> will be set to the compressed file"}, {"role": "assistant", "content": "fileVariable =\"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\nzip_file = fileVariable.compress(\"compressed_file\");\ninfo zip_file;\n// Note: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions."}]}
{"messages": [{"role": "user", "content": "Converts the text stored in <text1> into a file object. The specified file name - <text2> will be set to the created file"}, {"role": "assistant", "content": "pdf_file=\"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\ninfo pdf_file; // returns \"sample.pdf\""}]}
{"messages": [{"role": "user", "content": "sets the name stored in <text1> as multipart param name of the file object - <file>"}, {"role": "assistant", "content": "fileVariable =\"Deluge, or Data Enriched Language for the Universal Grid Environment, is an online scripting language integrated with Zoho services.\".tofile(\"sample.pdf\");\nfileVariable.setParamName(\"samplefile\");\ninfo fileVariable;\n// Note 1: Applying this function on files fetched using invokeURL task is the ideal use-case. However, due to security reasons we cannot use invokeURL for public demonstrations, therefore we have used the toFile function to demonstrate file functions.\n//Note 2: The setParamName built-in function does not return any value and hence its output cannot be displayed using info statement. The param name \"samplefile\" will be set to the file stored in fileVariable while sending in a HTTP request using invoke URL task."}]}
